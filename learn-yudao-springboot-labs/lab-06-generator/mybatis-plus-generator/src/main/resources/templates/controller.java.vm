package ${package.Controller};

import com.baomidou.mybatisplus.core.metadata.IPage;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * @Author: ${author}
 * @Date: ${date}
 * @Description:
 */
@Api("xxx接口")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @ApiOperation("查询所有用户")
    @GetMapping
    public List<${entity}> findAll() {
        return ${table.entityPath}Service.list();
    }

    @ApiOperation("根据id查询用户")
    @GetMapping("/{id}")
    public ${entity} findOne(@PathVariable Integer id) {
        return ${table.entityPath}Service.getById(id);
    }

    @ApiOperation("根据分页查询用户")
    @GetMapping("/page")
    public IPage<${entity}> findPage(@RequestParam Integer pageNum, @RequestParam Integer pageSize, ${entity} ${table.entityPath}) {
        IPage<${entity}> page = ${table.entityPath}Service.getPage(pageNum, pageSize, ${table.entityPath});
        if (page.getCurrent() > page.getPages()) {
            page = ${table.entityPath}Service.getPage((int) page.getPages(), pageSize, ${table.entityPath});
        }
        return page;
    }

    @ApiOperation("添加或修改用户")
    @PostMapping
    public Boolean save(@RequestBody ${entity} ${table.entityPath}) {
        return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
    }

    @ApiOperation("根据id删除用户")
    @DeleteMapping("/{id}")
    public Boolean delete(@PathVariable Integer id) {
        return ${table.entityPath}Service.removeById(id);
    }

    @ApiOperation("根据id批量删除")
    @DeleteMapping("/del/batch")
    public Boolean deleteBatch(@RequestBody List<Integer> ids) {
        return ${table.entityPath}Service.removeBatchByIds(ids);
    }

}
#end
