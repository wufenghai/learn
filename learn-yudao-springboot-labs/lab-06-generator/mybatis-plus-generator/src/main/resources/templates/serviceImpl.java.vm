package ${package.ServiceImpl};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import javax.annotation.Resource;

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

/**
 * @Author: ${author}
 * @Date: ${date}
 * @Description:
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Resource
    private ${table.mapperName} ${table.entityPath}Mapper;

    @Override
    public IPage<${entity}> getPage(Integer pageNum, Integer pageSize, ${entity} ${table.entityPath}) {
        IPage<${entity}> page = new Page<>(pageNum, pageSize);
        LambdaQueryWrapper<${entity}> qw = new LambdaQueryWrapper<>();
        // 添加条件...

        return page(page, qw);
    }

}
#end

